package rainbowreefgame;

public class Map {

    //map for lvl 1
    private int[][] map1 = new int[][]{
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1,12, 0, 7, 0, 9, 0, 7, 0, 8, 0,11, 0,10, 0,11, 0, 8, 0, 7, 0, 9, 0, 9, 0, 2, 0, 9, 0, 3, 0, 1},
            {1, 9, 0, 7, 0, 8, 0, 8, 0, 7, 0,13, 0,10, 0,12, 0, 7, 0, 8, 0, 9, 0, 9, 0, 2, 0, 9, 0, 7, 0, 1},
            {1,11, 0, 8, 0, 9, 0, 7, 0, 8, 0,12, 0,10, 0,13, 0, 8, 0, 7, 0, 9, 0, 9, 0, 2, 0, 8, 0, 7, 0, 1},
            {1, 9, 0, 8, 0,13, 0, 8, 0, 7, 0,11, 0,10, 0,11, 0, 7, 0, 8, 0, 9, 0, 9, 0, 2, 0, 8, 0, 8, 0, 1},
            {1,12, 0, 3, 0,12, 0, 7, 0, 8, 0,13, 0, 6, 0,12, 0, 8, 0, 7, 0,12, 0, 3, 0, 9, 0, 7, 0, 9, 0, 1},
            {1, 9, 0, 3, 0,12, 0, 8, 0, 7, 0,12, 0, 0, 0,13, 0, 7, 0, 8, 0,12, 0, 3, 0, 9, 0, 4, 0,10, 0, 1},
            {1,13, 0, 3, 0,11, 0, 7, 0, 3, 0,11, 0, 6, 0,11, 0, 3, 0, 7, 0,11, 0, 3, 0, 9, 0,11, 0,11, 0, 1},
            {1, 9, 0, 4, 0, 2, 0, 8, 0, 2, 0, 8, 0, 0, 0, 2, 0, 9, 0, 8, 0, 2, 0, 2, 0, 2, 0, 4, 0,12, 0, 1},
            {1,13, 0, 4, 0, 2, 0, 7, 0, 2, 0, 8, 0, 3, 0, 2, 0, 9, 0, 7, 0, 2, 0, 2, 0, 2, 0,12, 0,13, 0, 1},
            {1, 9, 0, 4, 0, 2, 0, 8, 0, 7, 0, 0, 0, 0, 0, 8, 0, 7, 0, 8, 0, 2, 0, 2, 0, 2, 0, 4, 0,13, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 8, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 8, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
    };

    //map for lvl 2
    private int[][] map2 = new int[][]{
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 3, 0, 8, 0, 2, 0, 9, 0, 8, 0,11, 0, 5, 0, 0, 0, 8, 0, 7, 0, 9, 0, 7, 0, 9, 0, 9, 0, 3, 0, 1},
            {1, 9, 0, 8, 0, 2, 0, 9, 0, 7, 0,13, 0, 0, 0, 0, 0, 7, 0, 8, 0, 8, 0, 8, 0, 9, 0, 9, 0, 3, 0, 1},
            {1, 3, 0,12, 0, 2, 0,10, 0, 8, 0,12, 0, 0, 0, 0, 0, 8, 0, 7, 0, 7, 0, 7, 0, 3, 0, 8, 0, 9, 0, 1},
            {1,11, 0, 8, 0, 2, 0, 8, 0, 7, 0,11, 0, 0, 0, 0, 0, 7, 0, 8, 0, 7, 0, 8, 0, 2, 0, 8, 0, 8, 0, 1},
            {1, 7, 0, 9, 0, 2, 0, 7, 0, 8, 0,13, 0, 6, 0, 2, 0, 8, 0, 7, 0, 2, 0, 7, 0,10, 0, 7, 0, 9, 0, 1},
            {1, 7, 0,10, 0, 2, 0, 3, 0, 7, 0,12, 0, 0, 0, 2, 0, 7, 0, 8, 0, 2, 0, 7, 0,10, 0, 4, 0,10, 0, 1},
            {1, 7, 0, 9, 0, 2, 0, 7, 0, 3, 0,11, 0, 6, 0, 2, 0, 3, 0, 7, 0, 8, 0, 8, 0,11, 0,11, 0, 7, 0, 1},
            {1, 7, 0,13, 0, 2, 0, 8, 0, 9, 0,10, 0, 0, 0, 2, 0, 9, 0, 8, 0, 7, 0, 4, 0,12, 0, 4, 0, 2, 0, 1},
            {1, 7, 0,12, 0, 2, 0, 7, 0, 9, 0, 9, 0,13, 0, 2, 0, 9, 0, 7, 0, 7, 0, 4, 0,13, 0,12, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 8, 0, 0, 0, 0, 0, 9, 0, 8, 0, 9, 0, 0, 0, 0, 0, 0, 0, 9, 0, 8, 0, 9, 0, 0, 0, 0, 0, 8, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
    };

    //map for lvl 3
    private int[][] map3 = new int[][]{
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 5, 0, 0, 0, 2, 0, 7, 0, 8, 0,11, 0, 5, 0, 0, 0, 8, 0, 7, 0, 5, 0, 0, 0, 2, 0,11, 0, 3, 0, 1},
            {1, 0, 0, 0, 0, 2, 0, 8, 0, 7, 0,13, 0, 0, 0, 0, 0, 7, 0, 8, 0, 0, 0, 0, 0, 2, 0,12, 0, 9, 0, 1},
            {1, 0, 0, 0, 0, 2, 0, 7, 0, 8, 0,12, 0, 0, 0, 0, 0, 8, 0, 7, 0, 0, 0, 0, 0, 2, 0,13, 0, 9, 0, 1},
            {1, 0, 0, 0, 0, 2, 0, 8, 0, 7, 0,11, 0, 0, 0, 0, 0, 7, 0, 8, 0, 0, 0, 0, 0, 2, 0,10, 0, 8, 0, 1},
            {1,12, 0, 3, 0, 7, 0, 7, 0, 8, 0,13, 0, 7, 0,12, 0, 8, 0, 7, 0,12, 0, 8, 0, 9, 0, 7, 0, 9, 0, 1},
            {1, 9, 0, 3, 0, 8, 0, 8, 0, 7, 0,12, 0,12, 0,13, 0, 7, 0, 8, 0,12, 0, 9, 0, 5, 0, 0, 0,10, 0, 1},
            {1,13, 0, 3, 0, 9, 0, 7, 0, 3, 0,11, 0,11, 0,11, 0, 3, 0, 7, 0,11, 0, 7, 0, 0, 0, 0, 0,11, 0, 1},
            {1, 9, 0, 4, 0, 8, 0, 8, 0, 9, 0, 7, 0,13, 0, 3, 0, 9, 0, 8, 0, 3, 0, 0, 0, 0, 0, 0, 0,12, 0, 1},
            {1,13, 0, 4, 0, 7, 0, 7, 0, 7, 0, 2, 0, 2, 0, 2, 0, 2, 0, 8, 0, 7, 0, 0, 0, 0, 0, 0, 0,13, 0, 1},
            {1, 9, 0, 4, 0,10, 0, 8, 0, 7, 0, 8, 0, 2, 0, 2, 0, 7, 0, 8, 0, 0, 0, 0, 0, 0, 0, 4, 0,13, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 8, 0, 2, 0, 2, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 9, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 8, 0, 9, 0,10, 0, 3, 0, 0, 0, 0, 0, 9, 0,11, 0, 8, 0, 8, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0,10, 0, 7, 0, 7, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 3, 0, 4, 0, 4, 0, 1},
            {1, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 2, 0, 2, 0, 2, 0, 1},
            {1, 7, 0, 8, 0, 9, 0,10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,10, 0, 9, 0, 8, 0, 7, 0, 1},
            {1, 7, 0, 8, 0, 9, 0,10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,10, 0, 9, 0, 8, 0, 7, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
    };

    //return map depending on level
    int[][] getGameMap(int level){
        if(level == 1){
            return map1;
        }
        else if(level == 2){
            return map2;
        }
        else if(level == 3){
            return map3;
        }
        return null;
    }
}
